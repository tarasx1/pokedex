{"ast":null,"code":"import { API } from '../api/api';\nlet initialState = {\n  pokemons: [],\n  types: []\n};\nconst pokemonReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'GET_POKEMON':\n      {\n        return {\n          ...state,\n          pokemons: action.pokemons\n        };\n      }\n    case 'SELECTED_POKEMON':\n      {\n        return {\n          ...state,\n          types: [...state, action.pokemonTypes]\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport const getPokemonActionCreator = pokemons => ({\n  type: 'GET_POKEMON',\n  pokemons\n});\nexport const selectedPokemonActionCreator = pokemonTypes => ({\n  type: 'SELECTED_POKEMON',\n  pokemonTypes\n});\nexport const getPokemonThunk = pokemon => async dispatch => {\n  let data = await API.getPokemon(pokemon);\n  dispatch(getPokemonActionCreator(data.results));\n};\nexport const getPokemonTypes = id => async dispatch => {\n  let data = await API.selectPokemon(id);\n  dispatch(selectedPokemonActionCreator(data.types));\n};\nexport default pokemonReducer;","map":{"version":3,"names":["API","initialState","pokemons","types","pokemonReducer","state","action","type","pokemonTypes","getPokemonActionCreator","selectedPokemonActionCreator","getPokemonThunk","pokemon","dispatch","data","getPokemon","results","getPokemonTypes","id","selectPokemon"],"sources":["C:/Users/taras/IT/react-kak-prosto/projects/task2/src/redux/pokemonReducer.js"],"sourcesContent":["import { API } from '../api/api';\r\n\r\nlet initialState = {\r\n  pokemons: [],\r\n  types: [],\r\n};\r\n\r\nconst pokemonReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_POKEMON': {\r\n      return { ...state, pokemons: action.pokemons };\r\n    }\r\n    case 'SELECTED_POKEMON': {\r\n      return {\r\n        ...state,\r\n        types: [...state, action.pokemonTypes],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getPokemonActionCreator = (pokemons) => ({\r\n  type: 'GET_POKEMON',\r\n  pokemons,\r\n});\r\nexport const selectedPokemonActionCreator = (pokemonTypes) => ({\r\n  type: 'SELECTED_POKEMON',\r\n  pokemonTypes,\r\n});\r\nexport const getPokemonThunk = (pokemon) => async (dispatch) => {\r\n  let data = await API.getPokemon(pokemon);\r\n  dispatch(getPokemonActionCreator(data.results));\r\n};\r\nexport const getPokemonTypes = (id) => async (dispatch) => {\r\n  let data = await API.selectPokemon(id);\r\n  dispatch(selectedPokemonActionCreator(data.types));\r\n};\r\n\r\nexport default pokemonReducer;\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,YAAY;AAEhC,IAAIC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGJ,YAAY;EAAA,IAAEK,MAAM;EAClD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAAE;QAClB,OAAO;UAAE,GAAGF,KAAK;UAAEH,QAAQ,EAAEI,MAAM,CAACJ;QAAS,CAAC;MAChD;IACA,KAAK,kBAAkB;MAAE;QACvB,OAAO;UACL,GAAGG,KAAK;UACRF,KAAK,EAAE,CAAC,GAAGE,KAAK,EAAEC,MAAM,CAACE,YAAY;QACvC,CAAC;MACH;IACA;MACE,OAAOH,KAAK;EAAC;AAEnB,CAAC;AAED,OAAO,MAAMI,uBAAuB,GAAIP,QAAQ,KAAM;EACpDK,IAAI,EAAE,aAAa;EACnBL;AACF,CAAC,CAAC;AACF,OAAO,MAAMQ,4BAA4B,GAAIF,YAAY,KAAM;EAC7DD,IAAI,EAAE,kBAAkB;EACxBC;AACF,CAAC,CAAC;AACF,OAAO,MAAMG,eAAe,GAAIC,OAAO,IAAK,MAAOC,QAAQ,IAAK;EAC9D,IAAIC,IAAI,GAAG,MAAMd,GAAG,CAACe,UAAU,CAACH,OAAO,CAAC;EACxCC,QAAQ,CAACJ,uBAAuB,CAACK,IAAI,CAACE,OAAO,CAAC,CAAC;AACjD,CAAC;AACD,OAAO,MAAMC,eAAe,GAAIC,EAAE,IAAK,MAAOL,QAAQ,IAAK;EACzD,IAAIC,IAAI,GAAG,MAAMd,GAAG,CAACmB,aAAa,CAACD,EAAE,CAAC;EACtCL,QAAQ,CAACH,4BAA4B,CAACI,IAAI,CAACX,KAAK,CAAC,CAAC;AACpD,CAAC;AAED,eAAeC,cAAc"},"metadata":{},"sourceType":"module"}