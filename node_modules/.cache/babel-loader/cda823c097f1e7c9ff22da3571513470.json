{"ast":null,"code":"import { API } from '../api/api';\nlet initialState = {\n  pokemons: [],\n  types: [],\n  activeType: null\n};\nconst pokemonReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'GET_POKEMON':\n      {\n        return {\n          ...state,\n          pokemons: [...action.pokemons]\n        };\n      }\n    case 'SELECTED_POKEMON':\n      {\n        return {\n          ...state,\n          types: [action.pokemonTypes]\n        };\n      }\n    case 'SET_ACTIVE_TYPE':\n      {\n        return {\n          ...state,\n          activeType: action.activeType\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport const getPokemonActionCreator = pokemons => ({\n  type: 'GET_POKEMON',\n  pokemons\n});\nexport const selectedPokemonActionCreator = pokemonTypes => ({\n  type: 'SELECTED_POKEMON',\n  pokemonTypes\n});\nexport const setActiveType = activeType => ({\n  type: 'SET_ACTIVE_TYPE',\n  activeType\n});\nexport const getPokemonThunk = pokemon => async dispatch => {\n  let data = await API.getPokemon(pokemon);\n  let pokemons = data.map(pokemon => pokemon.data);\n  dispatch(getPokemonActionCreator(pokemons));\n};\nexport const getPokemonTypes = () => async dispatch => {\n  let data = await API.getTypes();\n  dispatch(selectedPokemonActionCreator(data.types));\n};\n\n// export const getAllTypes = () => {\n//   return async (dispatch, getState) => {\n//     let response = await pokemonsAPI.getTypes();\n//     dispatch(setAllTypes(response.results));\n//   };\n// };\n\nexport default pokemonReducer;","map":{"version":3,"names":["API","initialState","pokemons","types","activeType","pokemonReducer","state","action","type","pokemonTypes","getPokemonActionCreator","selectedPokemonActionCreator","setActiveType","getPokemonThunk","pokemon","dispatch","data","getPokemon","map","getPokemonTypes","getTypes"],"sources":["C:/Users/taras/IT/react-kak-prosto/projects/task2/src/redux/pokemonReducer.js"],"sourcesContent":["import { API } from '../api/api';\r\n\r\nlet initialState = {\r\n  pokemons: [],\r\n  types: [],\r\n  activeType: null,\r\n};\r\n\r\nconst pokemonReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_POKEMON': {\r\n      return { ...state, pokemons: [...action.pokemons] };\r\n    }\r\n    case 'SELECTED_POKEMON': {\r\n      return {\r\n        ...state,\r\n        types: [action.pokemonTypes],\r\n      };\r\n    }\r\n    case 'SET_ACTIVE_TYPE': {\r\n      return {\r\n        ...state,\r\n        activeType: action.activeType,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getPokemonActionCreator = (pokemons) => ({\r\n  type: 'GET_POKEMON',\r\n  pokemons,\r\n});\r\nexport const selectedPokemonActionCreator = (pokemonTypes) => ({\r\n  type: 'SELECTED_POKEMON',\r\n  pokemonTypes,\r\n});\r\n\r\nexport const setActiveType = (activeType) => ({\r\n  type: 'SET_ACTIVE_TYPE',\r\n  activeType,\r\n});\r\nexport const getPokemonThunk = (pokemon) => async (dispatch) => {\r\n  let data = await API.getPokemon(pokemon);\r\n  let pokemons = data.map((pokemon) => pokemon.data);\r\n  dispatch(getPokemonActionCreator(pokemons));\r\n};\r\n\r\nexport const getPokemonTypes = () => async (dispatch) => {\r\n  let data = await API.getTypes();\r\n  dispatch(selectedPokemonActionCreator(data.types));\r\n};\r\n\r\n// export const getAllTypes = () => {\r\n//   return async (dispatch, getState) => {\r\n//     let response = await pokemonsAPI.getTypes();\r\n//     dispatch(setAllTypes(response.results));\r\n//   };\r\n// };\r\n\r\nexport default pokemonReducer;\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,YAAY;AAEhC,IAAIC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGL,YAAY;EAAA,IAAEM,MAAM;EAClD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAAE;QAClB,OAAO;UAAE,GAAGF,KAAK;UAAEJ,QAAQ,EAAE,CAAC,GAAGK,MAAM,CAACL,QAAQ;QAAE,CAAC;MACrD;IACA,KAAK,kBAAkB;MAAE;QACvB,OAAO;UACL,GAAGI,KAAK;UACRH,KAAK,EAAE,CAACI,MAAM,CAACE,YAAY;QAC7B,CAAC;MACH;IACA,KAAK,iBAAiB;MAAE;QACtB,OAAO;UACL,GAAGH,KAAK;UACRF,UAAU,EAAEG,MAAM,CAACH;QACrB,CAAC;MACH;IACA;MACE,OAAOE,KAAK;EAAC;AAEnB,CAAC;AAED,OAAO,MAAMI,uBAAuB,GAAIR,QAAQ,KAAM;EACpDM,IAAI,EAAE,aAAa;EACnBN;AACF,CAAC,CAAC;AACF,OAAO,MAAMS,4BAA4B,GAAIF,YAAY,KAAM;EAC7DD,IAAI,EAAE,kBAAkB;EACxBC;AACF,CAAC,CAAC;AAEF,OAAO,MAAMG,aAAa,GAAIR,UAAU,KAAM;EAC5CI,IAAI,EAAE,iBAAiB;EACvBJ;AACF,CAAC,CAAC;AACF,OAAO,MAAMS,eAAe,GAAIC,OAAO,IAAK,MAAOC,QAAQ,IAAK;EAC9D,IAAIC,IAAI,GAAG,MAAMhB,GAAG,CAACiB,UAAU,CAACH,OAAO,CAAC;EACxC,IAAIZ,QAAQ,GAAGc,IAAI,CAACE,GAAG,CAAEJ,OAAO,IAAKA,OAAO,CAACE,IAAI,CAAC;EAClDD,QAAQ,CAACL,uBAAuB,CAACR,QAAQ,CAAC,CAAC;AAC7C,CAAC;AAED,OAAO,MAAMiB,eAAe,GAAG,MAAM,MAAOJ,QAAQ,IAAK;EACvD,IAAIC,IAAI,GAAG,MAAMhB,GAAG,CAACoB,QAAQ,EAAE;EAC/BL,QAAQ,CAACJ,4BAA4B,CAACK,IAAI,CAACb,KAAK,CAAC,CAAC;AACpD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeE,cAAc"},"metadata":{},"sourceType":"module"}